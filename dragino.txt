IP 172.24.0.134
device addr 26011AF3
device EUI 00ED32B2C973BFC8
aplication EUI 70B3D57ED002B96D
network session key 28CDF25C3BBF952D87CC92A31F06917A
application session key B031C439EB411B6CC039FEA058A5E441
freq 868100000
datarate DR4 - SF8/125kHz

user cursist04.cvOb2@gmail.com
pw ipad@Cvo2
-------------------------------------------------------------------------------
 Jun  8 2016 00:22:57

rst:0x1 (POWERON_RESET),boot:0x13 (SPI_FAST_FLASH_BOOT)
configsip: 0, SPIWP:0xee
clk_drv:0x00,q_drv:0x00,d_drv:0x00,cs0_drv:0x00,hd_drv:0x00,wp_drv:0x00
mode:DIO, clock div:2
load:0x3fff0018,len:4
load:0x3fff001c,len:4928
ho 0 tail 12 room 4
load:0x40078000,len:9332
load:0x40080400,len:6216
entry 0x400806e8
I (442) cpu_start: Pro cpu up.
I (442) cpu_start: Application information:
I (442) cpu_start: Compile time:     07:44:16
I (444) cpu_start: Compile date:     May 29 2019
I (450) cpu_start: ESP-IDF:          v3.3-beta1-268-g5c88c5996
I (456) cpu_start: Starting app cpu, entry point is 0x4008294c
I (0) cpu_start: App cpu up.
I (466) heap_init: Initializing. RAM available for dynamic allocation:
I (473) heap_init: At 3FFAE6E0 len 00001920 (6 KiB): DRAM
I (479) heap_init: At 3FFB9B88 len 00026478 (153 KiB): DRAM
I (486) heap_init: At 3FFE0440 len 00003AE0 (14 KiB): D/IRAM
I (492) heap_init: At 3FFE4350 len 0001BCB0 (111 KiB): D/IRAM
I (498) heap_init: At 40093398 len 0000CC68 (51 KiB): IRAM
I (505) cpu_start: Pro cpu start user code
I (75) cpu_start: Starting scheduler on PRO CPU.
I (0) cpu_start: Starting scheduler on APP CPU.
MicroPython v1.11 on 2019-05-29; ESP32 module with ESP32
Type "help()" for more information.

MicroPython v1.11 on 2019-05-29; ESP32 module with ESP32

Type "help()" for more information.
>>> %Run -c $EDITOR_CONTENT
OK3.0.0.1.H

OK

None
>>> from machine import UART
>>> ser = UART(1,115200)
>>> ser.write(encode('at+get_config=lora:channel'))
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'encode' isn't defined
>>> ser.write(str.encode('at+get_config=lora:channel'))
26
>>> ser.readline()
>>> ser.readline()
>>> ser.write(encode('at+get_config=lora:channel\r\n'))
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'encode' isn't defined
>>> ser.write(str.encode('at+get_config=lora:channel\r\n'))
28
>>> ser.readline()
b'Too many parameters.\r\n'
>>> ser.readline()
>>> from machine import UART
>>> ser = UART(1,115200)
>>> ser.write(str.encode('at+get_config=lora:channel\r\n'))
28
>>> ser.readline()
b'OK.Max_nb_chs=16:\r\n'
>>> ser.readline()
b'* 0,on,868100000,0,5; * 1,on,868300000,0,5; * 2,on,868500000,0,5; * 3,on,867100000,0,5; * 4,on,867300000,0,5; * 5,on,867500000,0,5; * 6,on,867700000,0,5; * 7,on,867900000,0,5; \r\n'
>>> ser.write(str.encode('at+get_config=device:status\r\n'))
29
>>> ser.readline()
b' 8,off,0,0,0;  9,off,0,0,0; 10,off,0,0,0; 11,off,0,0,0; 12,off,0,0,0; 13,off,0,0,0; 14,off,0,0,0; 15,off,0,0,0 \r\n'
>>> ser.readline()
b'***********\r\n'
>>> ser.readline()
>>> ser.readline()
>>> ser.readline()
>>> ser.write(str.encode('at+get_config=device:status\r\n'))
29
>>> ser.readline()
b'OK.\r\n'
>>> ser.readline()
b'*************************************************\r\n'
>>> ser.readline()
b'===============Device Status List================\r\n'
>>> ser.readline()
b'Board Core:  RAK811\r\n'
>>> ser.readline()
b'MCU:  STM32L151CB_A\r\n'
>>> ser.readline()
b'LoRa chip:  SX1276\r\n'
>>> ser.readline()
b'===================List End======================\r\n'
>>> ser.readline()
b'*************************************************\r\n'
>>> ser.readline()
>>> ser.write(str.encode('at+get_config=lora:status\r\n'))
27
>>> ser.readline()
b'OK.\r\n'
>>> ser.readline()
b'*************************************************\r\n'
>>> ser.readline()
b'==============LoRaWAN Status List================\r\n'
>>> ser.readline()
b'Region: EU868\r\n'
>>> ser.readline()
b'Send_interval: 30s\r\n'
>>> ser.readline()
b'Join_mode: OTAA\r\n'
>>> ser.readline()
b'DevEui: 0000000000000000\r\n'
>>> ser.readline()
b'AppEui: 0000000000000000\r\n'
>>> ser.readline()
b'AppKey: 00000000000000000000000000000000\r\n'
>>> ser.readline()
b'Class: A\r\n'
>>> ser.readline()
b'Joined Network:false\r\n'
>>> ser.readline()
b'IsConfirm: false\r\n'
>>> ser.readline()
b'LoRa Ack_retrans: 8\r\n'
>>> ser.readline()
b'Work Mode: LoRaWAN\r\n'
>>> ser.readline()
b'AdrEnable: true\r******************************\r\n'
>>> ser.readline()
>>> ser.readline()
>>> ser.write(str.encode('at+set_config=lora:ch_mask:1:0\r\n'))
32
>>> ser.write(str.encode('at+set_config=lora:ch_mask:2:0\r\n'))
32
>>> ser.write(str.encode('at+set_config=lora:ch_mask:3:0\r\n'))
32
>>> ser.write(str.encode('at+set_config=lora:ch_mask:4:0\r\n'))
32
>>> ser.write(str.encode('at+set_config=lora:ch_mask:5:0\r\n'))
32
>>> ser.write(str.encode('at+set_config=lora:ch_mask:6:0\r\n'))
32
>>> ser.write(str.encode('at+set_config=lora:ch_mask:7:0\r\n'))
32
>>> ser.write(str.encode('at+set_config=lora:ch_mask:8:0\r\n'))
32
>>> ser.write(str.encode('at+set_config=lora:ch_mask:9:0\r\n'))
32
>>> ser.write(str.encode('at+set_config=lora:ch_mask:10:0\r\n'))
33
>>> ser.write(str.encode('at+set_config=lora:ch_mask:11:0\r\n'))
33
>>> ser.write(str.encode('at+set_config=lora:ch_mask:12:0\r\n'))
33
>>> ser.write(str.encode('at+set_config=lora:ch_mask:13:0\r\n'))
33
>>> ser.write(str.encode('at+set_config=lora:ch_mask:14:0\r\n'))
33
>>> ser.write(str.encode('at+set_config=lora:ch_mask:15:0\r\n'))
33
>>> ser.write(str.encode('at+get_config=lora:channel\r\n'))
28
>>> ser.readline()
b'OK\r\n'
>>> ser.readline()
b'OK\r\n'
>>> ser.readline()
b'OK\r\n'
>>> ser.readline()
b'OK\r\n'
>>> ser.readline()
b'OK\r\n'
>>> ser.readline()
b'OK\r\n'
>>> ser.readline()
b'OK\r\n'
>>> ser.readline()
b'OK\r\n'
>>> ser.readline()
b'OK\r\n'
>>> ser.readline()
b'OK\r\n'
>>> ser.readline()
b'OK\r\n'
>>> ser.readline()
b'OK\r\n'
>>> ser.readline()
b'OK\r\n'
>>> ser.readline()
b'OK\r\n'
>>> ser.readline()
b'OK\r\n'
>>> ser.readline()
b'OK.Max_nb_chs=16:\r\n'
>>> ser.readline()
b'* 0,on,868100000,0,5;  1,off,868300000,0,5;  2,off,868500000,0,5;  3,off,867100000,0,5;  4,off,867300000,0,5;  5,off,867500000,0,5;  6,off,867700000,0,5;  7,off,867900000,0,5; \r\n'
>>> ser.readline()
b' 8,off,0,0,0;  9,off,0,0,0; 10,off,0,0,0; 11,off,0,0,0; 12,off,0,0,0; 13,off,0,0,0; 14,off,0,0,0; 15,off,0,0,0 \r\n'
>>> ser.readline()
>>> ser.write(str.encode('at+set_config=lora:dr:4\r\n'))
25
>>> ser.readline()
b'OK\r\n'
>>> ser.readline()
>>> 
---------------------------------------------------------------------------------------

>>> ser.write(str.encode('at+set_config=lora:join_mode:1\r\n'))
32
>>> ser.readline()
b'join_mode:ABP\r\n'
>>> ser.readline()
b'OK\r\n'
>>> ser.readline()
>>> ser.write(str.encode('at+set_config=lora:class:0\r\n'))
28
>>> ser.readline()
b'Class:A\r\n'
>>> ser.readline()
b'OK\r\n'
>>> ser.readline()
>>> ser.write(str.encode('at+set_config=lora:region:EU868\r\n'))
33
>>> ser.readline()
b'No switch region.Current region:EU868\r\n'
>>> ser.readline()
b'OK\r\n'
>>> ser.readline()
>>> ser.write(str.encode('at+set_config=lora:dev_addr:00ED32B2C973BFC8\r\n'))
46
>>> ser.readline()
b'Parameter format error.\r\n'
>>> ser.write(str.encode('at+set_config=lora:dev_addr:ED32B2C973BFC8\r\n'))
44
>>> ser.readline()
b'Parameter format error.\r\n'
>>> ser.write(str.encode('at+set_config=lora:dev_addr:26011AF3\r\n'))
38
>>> ser.readline()
b'OK\r\n'
>>> ser.readline()
>>> ser.write(str.encode('at+set_config=lora:nwks_key:28CDF25C3BBF952D87CC92A31F06917A\r\n'))
62
>>> ser.readline()
b'OK\r\n'
>>> ser.readline()
>>> ser.write(str.encode('at+set_config=lora:apps_key:B031C439EB411B6CC039FEA058A5E441\r\n'))
62
>>> ser.readline()
b'OK\r\n'
>>> ser.readline()
>>> ser.readline()
>>> ser.readline()
>>> ser.write(str.encode('at+join\r\n'))
9
>>> ser.readline()
b'ABP: \r\n'
>>> ser.readline()
b'DevEui: 0000000000000000\r\n'
>>> ser.readline()
b'DevAddr: 26011AF3\r\n'
>>> ser.readline()
b'AppsKey: B031C439EB411B6CC039FEA058A5E441\r\n'
>>> ser.readline()
b'NwksKey: 28CDF25C3BBF952D87CC92A31F06917A\r\n'
>>> ser.write(str.encode('at+set_config=lora:dev_eui:00ED32B2C973BFC8\r\n'))
45
>>> ser.readline()
b'OK\r\n'
>>> ser.readline()
b'OK\r\n'
>>> ser.readline()
>>> ser.write(str.encode('at+join\r\n'))
9
>>> ser.readline()
b'ABP: \r\n'
>>> ser.readline()
b'DevEui: 00ED32B2C973BFC8\r\n'
>>> ser.readline()
b'DevAddr: 26011AF3\r\n'
>>> ser.readline()
b'AppsKey: B031C439EB411B6CC039FEA058A5E441\r\n'
>>> ser.readline()
b'NwksKey: 28CDF25C3BBF952D87CC92A31F06917A\r\n'
>>> ser.readline()
b'OK\r\n'
>>> ser.readline()
>>> ser.write(str.encode('at+send=lora:2:1234567890\r\n'))
27
>>> ser.readline()
b'OK\r\n'
>>> ser.readline()
b'[LoRa]: Unconfirm data send OK\r\n'
>>> ser.readline()
>>> ser.write(str.encode('at+send=lora:3:ABCDEF\r\n'))
23
>>> ser.readline()
b'OK\r\n'
>>> ser.readline()
b'[LoRa]: Unconfirm data send OK\r\n'
>>> ser.readline()
>>> 
